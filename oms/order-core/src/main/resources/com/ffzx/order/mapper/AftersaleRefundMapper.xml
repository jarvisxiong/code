<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ffzx.order.mapper.AftersaleRefundMapper" >
  <resultMap id="BaseResultMap" type="com.ffzx.order.api.dto.AftersaleRefund" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="refund_no" property="refundNo" jdbcType="VARCHAR" />
    <result column="apply_no" property="applyNo" jdbcType="VARCHAR" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="pickup_no" property="pickupNo" jdbcType="VARCHAR" />
    <result column="exchange_order_no" property="exchangeOrderNo" jdbcType="VARCHAR" />
    <result column="refund_status" property="refundStatus" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy.id" jdbcType="VARCHAR" />
    <result column="last_update_date" property="lastUpdateDate" jdbcType="TIMESTAMP" />
    <result column="last_update_by" property="lastUpdateBy.id" jdbcType="VARCHAR" />
    <result column="apply_id" property="aftersaleApply.id" jdbcType="VARCHAR" />
    <result column="approve_date" property="approveDate" jdbcType="TIMESTAMP" />
    <result column="pay_date" property="payDate" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <resultMap id="BaseResultMap_like" type="com.ffzx.order.api.dto.AftersaleRefund" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="refund_no" property="refundNo" jdbcType="VARCHAR" />
    <result column="apply_no" property="applyNo" jdbcType="VARCHAR" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="pickup_no" property="pickupNo" jdbcType="VARCHAR" />
    <result column="exchange_order_no" property="exchangeOrderNo" jdbcType="VARCHAR" />
    <result column="refund_status" property="refundStatus" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy.id" jdbcType="VARCHAR" />
    <result column="last_update_date" property="lastUpdateDate" jdbcType="TIMESTAMP" />
    <result column="last_update_by" property="lastUpdateBy.id" jdbcType="VARCHAR" />
    <result column="apply_id" property="aftersaleApply.id" jdbcType="VARCHAR" />
    <result column="approve_date" property="approveDate" jdbcType="TIMESTAMP" />
    <result column="pay_date" property="payDate" jdbcType="TIMESTAMP" />
    
    <result column="auditing_name" property="auditingName" jdbcType="VARCHAR" />
    <result column="auditing_id" property="auditingId" jdbcType="VARCHAR" />
    <result column="auditing_time" property="auditingTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    t.id, t.refund_no, t.apply_no, t.order_no, t.pickup_no, t.exchange_order_no, t.refund_status, 
    t.create_date, t.create_by as 'createBy.id', t.last_update_date, t.last_update_by as 'lastUpdateBy.id',
    t.apply_id as 'aftersaleApply.id', t.approve_date, t.pay_date
  </sql>
  <sql id="refund_Column_List" >
    t.id, t.refund_no, t.refund_status, t.create_date, t.create_by as 'createBy.id',t.last_update_date, 
    t.last_update_by as 'lastUpdateBy.id', t.approve_date, t.pay_date,t.auditing_name,t.auditing_id,t.auditing_time, 
    f.id as "aftersaleApply.id", f.apply_no as "aftersaleApply.applyNo", f.order_no as "aftersaleApply.orderNo", 
	f.exchange_order_no as "aftersaleApply.exchangeOrderNo", f.apply_status as "aftersaleApply.applyStatus", 
    f.apply_type as "aftersaleApply.applyType", f.service_approve_date as "aftersaleApply.serviceApproveDate", 
    f.storage_approve_date as "aftersaleApply.storageApproveDate", f.pickup_no as "aftersaleApply.pickupNo", 
   	f.apply_person_name as "aftersaleApply.applyPersonName", f.apply_person_phone as "aftersaleApply.applyPersonPhone", 
    f.apply_person_address as "aftersaleApply.applyPersonAddress", f.reason_select as "aftersaleApply.reasonSelect",
    f.reason_explain as "aftersaleApply.reasonExplain",
    f.apply_pic_img as "aftersaleApply.applyPicImg",f.order_id as "aftersaleApply.orderId"
  </sql>
  <sql id="order_Column_List" >
   t.id, t.apply_no, t.order_no, t.pickup_no, t.refund_no, t.exchange_order_no, t.apply_status, 
    t.apply_type, t.service_approve_date, t.service_approve_desc, t.storage_approve_date, 
    t.storage_approve_desc, t.apply_person_id, t.apply_person_name, t.apply_person_phone, 
    t.apply_person_address, t.reason_select, t.reason_explain, t.remarks, t.create_by as 'createBy.id', 
    t.create_date, t.last_update_by as 'lastUpdateBy.id', t.last_update_date, t.del_flag,t.order_id,t.apply_pic_img,
    o.status as "order.status",o.pay_type as "order.payType",o.buy_type as "order.buyType",o.member_id as "order.memberId",
   	o.member_name as "order.memberName",o.member_phone as "order.memberPhone",
   	o.buy_count as "order.buyCount",o.actual_price as "order.actualPrice",o.favorable_price as "order.favorablePrice",o.pay_time as "order.payTime",
   	o.send_person as "order.sendPerson",o.address_info as "order.addressInfo",o.invoice_desc as "order.invoiceDesc",o.member_account as "order.memberAccount",
   	o.send_person_name as "order.sendPersonName",o.service_point as "order.servicePoint",o.create_date as "order.createDate",
   	o.order_pack_status as "order.orderPackStatus",o.id as "order.id"
  </sql>
  <sql id="condition" >
    <if test="null!=params" >
      <if test="params.id != null and '' != params.id" >
        and t.id = #{params.id,jdbcType=VARCHAR}
      </if>
      <if test="params.refundNo != null and '' != params.refundNo" >
        and t.refund_no = #{params.refundNo,jdbcType=VARCHAR}
      </if>
      <if test="params.applyNo != null and '' != params.applyNo" >
        and t.apply_no = #{params.applyNo,jdbcType=VARCHAR}
      </if>
      <if test="params.orderNo != null and '' != params.orderNo" >
        and t.order_no = #{params.orderNo,jdbcType=VARCHAR}
      </if>
      
      
      <if test="params.pickupNo_like != null and '' != params.pickupNo_like" >
        and f.pickup_no like CONCAT('%', #{params.pickupNo_like,jdbcType=VARCHAR}, '%')
      </if>
      <if test="params.orderNo_like != null and '' != params.orderNo_like" >
        and t.order_no like CONCAT('%', #{params.orderNo_like,jdbcType=VARCHAR}, '%')
      </if>
      <if test="params.applyNo_like != null and '' != params.applyNo_like" >
        and t.apply_no like CONCAT('%', #{params.applyNo_like,jdbcType=VARCHAR}, '%')
      </if>
	  <if test="params.refundNo_like != null and '' != params.refundNo_like" >
        and f.refund_no like CONCAT('%', #{params.refundNo_like,jdbcType=VARCHAR}, '%')
      </if>
	   <if test="params.applyPersonPhone_like != null and '' != params.applyPersonPhone_like" >
        and f.apply_person_phone like CONCAT('%', #{params.applyPersonPhone_like,jdbcType=VARCHAR}, '%')
      </if>
      
      
      <!-- <if test="params.exchangeOrderNo != null and '' != params.exchangeOrderNo" >
        and t.exchange_order_no = #{params.exchangeOrderNo,jdbcType=VARCHAR}
      </if> -->
      <if test="params.refundStatus != null and '' != params.refundStatus" >
        and t.refund_status = #{params.refundStatus,jdbcType=VARCHAR}
      </if>
      <!-- <if test="params.createDate != null" >
        and t.create_date = #{params.createDate,jdbcType=TIMESTAMP}
      </if> -->
      <if test="params.applyStartDate!= null and '' != params.applyStartDate" >
        	<![CDATA[and t.create_date > #{params.applyStartDate,jdbcType=TIMESTAMP}]]>
      </if>
         <if test="params.applyEndDate!= null and '' != params.applyEndDate" >
        	<![CDATA[and t.create_date < #{params.applyEndDate,jdbcType=TIMESTAMP}]]>
      </if>
      <if test="params.createBy != null and '' != params.createBy" >
        and t.create_by = #{params.createBy.id,jdbcType=VARCHAR}
      </if>
      <if test="params.lastUpdateDate != null" >
        and t.last_update_date = #{params.lastUpdateDate,jdbcType=TIMESTAMP}
      </if>
      <if test="params.lastUpdateBy != null and '' != params.lastUpdateBy" >
        and t.last_update_by = #{params.lastUpdateBy.id,jdbcType=VARCHAR}
      </if>
       <if test="params.aftersaleApply!= null and '' != params.aftersaleApply" >
        and t.apply_id = #{params.aftersaleApply.id,jdbcType=VARCHAR}
      </if>
      <!-- 关联查询过滤条件 -->
       <if test="params.applyPersonPhone!= null and '' != params.applyPersonPhone" >
        and f.apply_person_phone = #{params.applyPersonPhone,jdbcType=VARCHAR}
      </if>
      <if test="params.applyPersonName != null and '' != params.applyPersonName" >
       and (f.apply_person_name = #{params.applyPersonName,jdbcType=VARCHAR} or f.apply_person_name like CONCAT('%', #{params.applyPersonName}, '%'))
      </if>
      <if test="params.pickupNo != null and '' != params.pickupNo" >
        and f.pickup_no = #{params.pickupNo,jdbcType=VARCHAR}
      </if>
      <if test="params.applyType != null and '' != params.applyType" >
        and f.apply_type = #{params.applyType,jdbcType=VARCHAR}
      </if>
      <if test="params.exchangeOrderNo != null and '' != params.exchangeOrderNo" >
        and f.exchange_order_no = #{params.exchangeOrderNo,jdbcType=VARCHAR}
      </if>
      <if test="params.serviceApproveStartDate != null" >
        and f.service_approve_date &gt;= #{params.serviceApproveStartDate,jdbcType=TIMESTAMP}
      </if>
      <if test="params.serviceApproveEndDate != null" >
        and f.service_approve_date &lt;= #{params.serviceApproveEndDate,jdbcType=TIMESTAMP}
      </if>
      <if test="params.storageApproveStartDate != null" >
        and f.storage_approve_date &gt;= #{params.storageApproveStartDate,jdbcType=TIMESTAMP}
      </if>
      <if test="params.storageApproveEndDate != null" >
        and f.storage_approve_date &lt;= #{params.storageApproveEndDate,jdbcType=TIMESTAMP}
      </if>
    </if>
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from aftersale_refund t 
    where t.id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByParams" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from aftersale_refund t 
    where 1=1
    <include refid="condition" />
  </select>
  <select id="selectCount" resultType="java.lang.Integer" >
    select count(1) as s from aftersale_refund t  where 1=1
    <include refid="condition" />
  </select>
  <select id="selectByPage" resultMap="BaseResultMap_like" parameterType="map" >
    select 
    <include refid="refund_Column_List" />
    from aftersale_refund t 
    left join aftersale_apply f on t.apply_id = f.id
    <if test="params.commodityBarcode!= null and '' != params.commodityBarcode" >
        LEFT JOIN aftersale_apply_item aai ON t.apply_id = aai.apply_id
    </if>
    where 1=1
    <include refid="condition" />
    <if test="params.commodityBarcode!= null and '' != params.commodityBarcode" >
        	and aai.commodity_barcode like CONCAT('%', #{params.commodityBarcode,jdbcType=VARCHAR}, '%')
    </if>
    <if test="orderByField != null and ''!=orderByField" >
      order by t.${orderByField} 
      <if test="orderByField" >
        ${orderBy}
      </if>
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from aftersale_refund
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteRefundByNo" parameterType="java.lang.String" >
    delete from aftersale_refund
    where refund_no = #{refundNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByPrimarayKeyForModel" parameterType="com.ffzx.order.api.dto.AftersaleRefund" >
    delete from aftersale_refund
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ffzx.order.api.dto.AftersaleRefund" >
    insert into aftersale_refund (id, refund_no, apply_no, 
      order_no, pickup_no, exchange_order_no, 
      refund_status, create_date, create_by, 
      last_update_date, last_update_by)
    values (#{id,jdbcType=VARCHAR}, #{refundNo,jdbcType=VARCHAR}, #{applyNo,jdbcType=VARCHAR}, 
      #{orderNo,jdbcType=VARCHAR}, #{pickupNo,jdbcType=VARCHAR}, #{exchangeOrderNo,jdbcType=VARCHAR}, 
      #{refundStatus,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{createBy.id,jdbcType=VARCHAR}, 
      #{lastUpdateDate,jdbcType=TIMESTAMP}, #{lastUpdateBy.id,jdbcType=VARCHAR},#{aftersaleApply.id,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ffzx.order.api.dto.AftersaleRefund" >
    insert into aftersale_refund
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="refundNo != null" >
        refund_no,
      </if>
      <if test="applyNo != null" >
        apply_no,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="pickupNo != null" >
        pickup_no,
      </if>
      <if test="exchangeOrderNo != null" >
        exchange_order_no,
      </if>
      <if test="refundStatus != null" >
        refund_status,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="lastUpdateDate != null" >
        last_update_date,
      </if>
      <if test="lastUpdateBy != null" >
        last_update_by,
      </if>
       <if test="aftersaleApply.id != null" >
        apply_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="refundNo != null" >
        #{refundNo,jdbcType=VARCHAR},
      </if>
      <if test="applyNo != null" >
        #{applyNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="pickupNo != null" >
        #{pickupNo,jdbcType=VARCHAR},
      </if>
      <if test="exchangeOrderNo != null" >
        #{exchangeOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="refundStatus != null" >
        #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy.id,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateDate != null" >
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null" >
        #{lastUpdateBy.id,jdbcType=VARCHAR},
      </if>
      <if test="aftersaleApply.id != null" >
       #{aftersaleApply.id,jdbcType=VARCHAR}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ffzx.order.api.dto.AftersaleRefund" >
    update aftersale_refund
    <set >
      <if test="refundNo != null" >
        refund_no = #{refundNo,jdbcType=VARCHAR},
      </if>
      <if test="applyNo != null" >
        apply_no = #{applyNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="pickupNo != null" >
        pickup_no = #{pickupNo,jdbcType=VARCHAR},
      </if>
      <if test="exchangeOrderNo != null" >
        exchange_order_no = #{exchangeOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="refundStatus != null" >
        refund_status = #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy.id,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateDate != null" >
        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null" >
        last_update_by = #{lastUpdateBy.id,jdbcType=VARCHAR},
      </if>
       <if test="aftersaleApply.id != null" >
      	apply_id= #{aftersaleApply.id,jdbcType=VARCHAR},
      </if>
      <if test="approveDate != null" >
        approve_date = #{approveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payDate != null" >
        pay_date = #{payDate,jdbcType=TIMESTAMP},
      </if>
      
       <if test="auditingName != null" >
      	auditing_name= #{auditingName,jdbcType=VARCHAR},
      </if>
      <if test="auditingId != null" >
        auditing_id = #{auditingId,jdbcType=VARCHAR},
      </if>
      <if test="auditingTime != null" >
        auditing_time = #{auditingTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ffzx.order.api.dto.AftersaleRefund" >
    update aftersale_refund
    set refund_no = #{refundNo,jdbcType=VARCHAR},
      apply_no = #{applyNo,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      pickup_no = #{pickupNo,jdbcType=VARCHAR},
      exchange_order_no = #{exchangeOrderNo,jdbcType=VARCHAR},
      refund_status = #{refundStatus,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_by = #{createBy.id,jdbcType=VARCHAR},
      last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      last_update_by = #{lastUpdateBy.id,jdbcType=VARCHAR},
      apply_id= #{aftersaleApply.id,jdbcType=VARCHAR},
      approve_date = #{approveDate,jdbcType=TIMESTAMP},
      pay_date = #{payDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 获取退款单信息 -->
  <select id="findRefundInfo" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from aftersale_refund t 
    where 1=1 
    <include refid="condition" />
  </select>  
</mapper>